#!/bin/bash

# /etc/rc.local

WAN_PORT=enp0s3
LAN_PORT=br0
WEB_PORT=8443
# Custom input chain
CUSTOM_INPUT=chain-incoming-services
# Custom forward chain
CUSTOM_FORWARD=chain-forward-services
# Custom nat preroute chain
CUSTOM_PREROUTING=chain-prerouting-services

# Enable IPV4 forward
sysctl -w net.ipv4.ip_forward=1 &>/dev/null

# Disable IPV6
sysctl -w net.ipv6.conf.all.disable_ipv6=1 &>/dev/null
sysctl -w net.ipv6.conf.default.disable_ipv6=1 &>/dev/null
sysctl -w net.ipv6.conf.lo.disable_ipv6=1 &>/dev/null

# Default policy to drop all incoming and forward packets.
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT

iptables -N ${CUSTOM_INPUT} &>/dev/null
iptables -F ${CUSTOM_INPUT}
iptables -C INPUT -j ${CUSTOM_INPUT} &>/dev/null || iptables -A INPUT -j ${CUSTOM_INPUT}  

iptables -N ${CUSTOM_FORWARD} &>/dev/null
iptables -F ${CUSTOM_FORWARD}
iptables -C FORWARD -j ${CUSTOM_FORWARD} &>/dev/null || iptables -A FORWARD -j ${CUSTOM_FORWARD}

iptables -N ${CUSTOM_PREROUTING} -t nat &>/dev/null
iptables -t nat -F ${CUSTOM_PREROUTING}
iptables -t nat -C PREROUTING -j ${CUSTOM_PREROUTING} &>/dev/null || iptables -t nat -A PREROUTING -j ${CUSTOM_PREROUTING}

# Block sync
#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp ! --syn -m state --state NEW -m limit --limit 5/m --limit-burst 7 -j LOG --log-level 4 --log-prefix "Drop Sync"
#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp ! --syn -m state --state NEW -j DROP

# Block Fragments
#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -f -m limit --limit 5/m --limit-burst 7 -j LOG --log-level 4 --log-prefix "Fragments Packets"
#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -f -j DROP

# Block bad stuff
#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP
#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp --tcp-flags ALL ALL -j DROP

#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp --tcp-flags ALL NONE -m limit --limit 5/m --limit-burst 7 -j LOG --log-level 4 --log-prefix "NULL Packets"
#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp --tcp-flags ALL NONE -j DROP # NULL packets

#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp --tcp-flags SYN,RST SYN,RST -j DROP

#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp --tcp-flags SYN,FIN SYN,FIN -m limit --limit 5/m --limit-burst 7 -j LOG --log-level 4 --log-prefix "XMAS Packets"
#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP #XMAS

#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp --tcp-flags FIN,ACK FIN -m limit --limit 5/m --limit-burst 7 -j LOG --log-level 4 --log-prefix "Fin Packets Scan"
#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp --tcp-flags FIN,ACK FIN -j DROP # FIN packet scans

#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP

#Drop invalid Packets
iptables -A ${CUSTOM_INPUT} -m conntrack --ctstate INVALID -j DROP


#Drop DHCP request from WAN_PORT
iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p udp -d 255.255.255.255 --destination-port 67:68 -j DROP
# NAT traffic going out the WAN interface.
iptables -t nat -C POSTROUTING -o ${WAN_PORT} -j MASQUERADE &>/dev/null || iptables -t nat -A POSTROUTING -o ${WAN_PORT} -j MASQUERADE


# Accept incoming packets from the WAN if the router initiated the connection.
iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Forward WAN packets to the LAN if the LAN initiated the connection.
iptables -A ${CUSTOM_FORWARD} -i ${WAN_PORT} -o ${LAN_PORT} -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
# Forward LAN packets to the WAN.
iptables -A ${CUSTOM_FORWARD} -i ${LAN_PORT} -o ${WAN_PORT} -j ACCEPT

# Forward LAN packaets to the LAN,if it is a bridge
iptables -A ${CUSTOM_FORWARD} -i ${LAN_PORT} -o ${LAN_PORT} -j ACCEPT

# Accept incoming packets from localhost and the LAN interface.
iptables -A ${CUSTOM_INPUT} -i lo -j ACCEPT
iptables -A ${CUSTOM_INPUT} -i ${LAN_PORT} -j ACCEPT
iptables -A ${CUSTOM_INPUT} -i br-+ -j ACCEPT
iptables -A ${CUSTOM_INPUT} -i docker+ -j ACCEPT


# Accept DNS Query
#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p tcp --dport 53 -j ACCEPT
#iptables -A ${CUSTOM_INPUT} -i ${WAN_PORT} -p udp --dport 53 -j ACCEPT

#Service SSH Allowed
iptables -A ${CUSTOM_INPUT} -p tcp --dport 22 -j ACCEPT

#Servide HTTPS Port Allowed
iptables -A ${CUSTOM_INPUT} -p tcp --dport ${WEB_PORT} -j ACCEPT

#CUSTOM_RULE_START
#CUSTOM_RULE_END
#CUSTOM_RULE_DNS_START
#CUSTOM_RULE_DNS_END
#CUSTOM_RULE_PORT_FORWARD_START
#CUSTOM_RULE_PORT_FORWARD_END





iptables -C ${CUSTOM_INPUT} -j RETURN &>/dev/null || iptables -A ${CUSTOM_INPUT} -j RETURN
iptables -C ${CUSTOM_FORWARD} -j RETURN &>/dev/null || iptables -A ${CUSTOM_FORWARD} -j RETURN
iptables -t nat -C ${CUSTOM_PREROUTING} -j RETURN &>/dev/null || iptables -t nat -A ${CUSTOM_PREROUTING} -j RETURN
exit 0
